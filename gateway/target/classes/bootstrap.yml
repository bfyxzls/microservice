spring:
  application:
    name: gateway
  profiles:
     active: ${SPRING_PROFILES_ACTIVE:dev}
  zipkin:
    #服务端地址
    base-url: http://localhost:9411
    #本项目服务名
    service:
      name: ${spring.application.name}
  sleuth:
      #监控开关
      enabled: true
      #采样率
      sampler:
        percentage: 1
server:
  port: 8081

eureka:
  client:
    service-url:
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/ #没有配置就使用默认值

feign:
  hystrix:
    enabled: true
  httpclient:
    enabled: false
  okhttp:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000 #20s超时

zuul:
  routes: #实现了反向代码和负载均衡，负载均衡采用轮询的方式实现
    a:
      path: /a/**
      sensitiveHeaders: "*" #不过滤任何头信息
      serviceId: servicea
    b:
      path: /b/**
      sensitiveHeaders: "*"
      serviceId: serviceb
    c:
      path: /c/**
      sensitiveHeaders: "*"
      serviceId: servicec
  add-proxy-headers: false
  stripPrefix: true #为true的情况下：向后端转发之后是不会携带 '/a' 的。为 false 则相反

ratelimit:
  enabled: true
  repository: REDIS #使用redis存储，一定要大写！
  policies:
    a: #针对上面那个服务的限流
      limit: 100 #每秒多少个请求
      refreshInterval: 60 #刷新时间窗口的时间，默认值 (秒)
      type:
        - ORIGIN #这里一定要大写,类型说明：URL通过请求路径区分，ORIGIN通过客户端IP地址区分，USER是通过登录用户名进行区分，也包括匿名用户


